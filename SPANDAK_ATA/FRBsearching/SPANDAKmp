#!/bin/bash
fullinput="$@"

if [[ -z "${fullinput// }" ]]; then
	 echo "Input required"
	 cmd="SP_search_BL.py -h"
	 $cmd
	 exit
fi

file=`echo $fullinput  | awk -F'--fil' '{print$2}' | awk '{print$1}'`
lpart=`echo $fullinput | awk -F'--fil' '{print$1}' `
rpart=`echo $fullinput | awk -F'--fil' '{print$2}' | awk '{for(i=2;i<=NF;i++)printf("%s ",$i)}'`

echo $file

if [[ "$file" ]]; then
	origname=`header $file -source_name`
	nchan=`header $file -nchans `
	nbits=`header $file -nbits`
	
	if [[ $nchan -ge 8193 ]]; then
		#temp=`bc -l <<< $nchan/8191` # In order to get the right fraction 
		#fcol=$( printf "%.0f" $temp ) # round to int
		# It is important to keep  the number channel power of 2 so, we are using this technique
		fcol="2"
	        nnchan=`bc -l <<< $nchan/$fcol`
        	while (( $(echo "$nnchan > 8193" |bc -l)  )); do
                	fcol=$[$fcol+2]
	                nnchan=`bc -l <<< $nchan/$fcol`
        	done
	fi
fi

#If sub-band search is required, orig file will be split into multiple files and 

if [[ $fullinput == *"--subBand"* ]]; then
	#MJD=`header $file -tstart`
	cmd="mkdir $origname"
	echo $cmd
	$cmd
	echo "Doing a sub-band search"
	nsub=`echo $fullinput | awk -F'--subBand' '{print$2}' | awk '{print$1}'`			
	echo "Input file will be splitted into $nsub files"
	fch1=`header $file -fch1`
	nchans=`header $file -nchans`
	foff=`header $file -foff`
	sourcename=`header $file -source_name`
	subsize=`bc -l <<< $nchans/$nsub`
	i=0
	cmd1=""
	cmd2=""
	cmd3=""
	timelim="" #Timeout time for various scripts

	while [ $i -lt $nsub ]; do
		highf=`bc -l <<< $fch1+$foff*$i*$subsize`
		lowf=`bc -l <<< $fch1+$foff*$i*$subsize+$foff*$subsize`
		echo $highf,$lowf
		outfil=`echo "sub"$i".fil"`
		if [[ i -le 0 ]]; then
			cmd1="bldice -f $file -b $highf -e $lowf -o $outfil -x .fil"
			cmd2="/usr/local/sigproc/bin/filedit $outfil --src-name=$i"_"$sourcename"  # Somehow my version does not change source name	
			cmd3="SP_search_BL.py $lpart --fil $outfil $rpart"
		else 
			cmd1="${cmd1} & bldice -f $file -b $highf -e $lowf -o $outfil -x .fil"
			cmd2="${cmd2} & /usr/local/sigproc/bin/filedit $outfil --src-name=$i"_"$sourcename"  # Somehow my version does not change source name
			cmd3="${cmd3} & SP_search_BL.py $lpart --fil $outfil $rpart"
		fi
		#sourcename=`header $outfil -source_name`
		#cmd2=$cmd2 +  " & /usr/local/sigproc/bin/filedit $outfil --src-name=$i"_"$sourcename"	# Somehow my version does not change source name		
		#echo $cmd2
		#$cmd
		let i=i+1
	done
	exit
	echo $cmd1
	eval $cmd1
	PID=`echo $!`
	
	echo $cmd2
	eval $cmd2
	PID=`echo $!`

	echo $cmd3
	eval $cmd3	
	PID=`echo $!`

	#echo $cmd4
	#eval $cmd4
	i=0
	while [ $i -lt $nsub ]; do
		localname=`header sub"$i".fil -source_name`
		cmd="mv ${localname}* ${origname}"
		eval $cmd
		let i=i+1
	done
	#exit
	cmd="gs -sDEVICE=pdfwrite -dNOPAUSE -dBATCH -dSAFER -sOutputFile=${origname}/${origname}_all_combined_frb_cand.pdf ${origname}/*/*_frb_cand.pdf"
	echo $cmd
	$cmd
fi

#Right now neg-DM search only possible for 8-bit files with less than 8k channels. 
if [[ $fullinput == *"--negDM"* ]] && [[ $nchan -le 8192 ]] && [[ $nbits -le 8 ]]  ; then
	cmd="mkdir $origname"
        echo $cmd
        $cmd	
	echo "Only artificial DM search will be conducted for three different dispersion types!"
	echo "For regular DM search, remove --negDM option."

	cmd="/home/vgajjar/bl_sigproc/src/filedit --flipTime $file"
	$cmd
	cmd="SP_search_BL.py $lpart --fil outfile.fil $rpart"
	$cmd
	localname=`header outfile.fil -source_name`
        cmd="mv $localname* $origname"
        echo $cmd
        $cmd
	cmd="rm outfile.fil"
	$cmd

	cmd="/home/vgajjar/bl_sigproc/src/filedit --flipFreq $file"
        $cmd
        cmd="SP_search_BL.py $lpart --fil outfile.fil $rpart"
        $cmd
	localname=`header $outfil -source_name`
        cmd="mv $localname* $origname"
        echo $cmd
        $cmd
	cmd="rm outfile.fil"
        $cmd

        cmd="/home/vgajjar/bl_sigproc/src/filedit --flipFreq --flipTime $file"
        $cmd
        cmd="SP_search_BL.py $lpart --fil outfile.fil $rpart"
        $cmd
	localname=`header $outfil -source_name`
        cmd="mv $localname* $origname"
        echo $cmd
        $cmd
	cmd="rm outfile.fil"
        $cmd

	cmd="gs -sDEVICE=pdfwrite -dNOPAUSE -dBATCH -dSAFER -sOutputFile=$origname_all_combined_frb_cand.pdf $origname/[nT,nF]*/*_frb_cand.pdf"
        echo $cmd
        $cmd

elif [[ $nchan -ge 8193 ]] && [[ $nbits -le 8 ]]  ; then
	#If input file has more than 8k channels and 8-bits 
	cmd="/home/vgajjar/bl_sigproc/src/sum_fil $file -o downsampled_chan.fil -fcollapse $fcol -obits 8 -qlen 10000"
	echo $cmd
	$cmd
	cmd="SP_search_BL.py $lpart --fil downsampled_chan.fil $rpart"
	echo $cmd
        $cmd
	if [[ -d "$origname" ]]; then
                echo "Directory exist, moving results to $origname"
                cmd="mv ${origname}_* $origname"
                echo $cmd
                $cmd
        fi
	cmd="rm downsampled_chan.fil"
	echo $cmd
	$cmd
	
elif [[ $nchan -le 8192 ]] && [[ $nbits -ge 9 ]]  ; then
	# If input file has more than 8-bits but lower than 8k channels
	cmd="/home/vgajjar/bl_sigproc/src/sum_fil $file -o downsampled_bits.fil -obits 8 -qlen 10000"
	echo $cmd
        $cmd
	cmd="SP_search_BL.py $lpart --fil downsampled_bits.fil $rpart"
        echo $cmd
        $cmd
	if [[ -d "$origname" ]]; then
                echo "Directory exist, moving results to $origname"
                cmd="mv ${origname}_* $origname"
                echo $cmd
                $cmd
        fi
        cmd="rm downsampled_bits.fil"
        echo $cmd
        $cmd

elif [[ $nchan -ge 8193 ]] && [[ $nbits -ge 9 ]]  ; then	
	#If input file has more than 8k channels and 8-bits 
	cmd="/home/vgajjar/bl_sigproc/src/sum_fil $file -o downsampled_chan_bits.fil -fcollapse $fcol -obits 8 -qlen 10000"
        echo $cmd
        $cmd
	cmd="SP_search_BL.py $lpart --fil downsampled_chan_bits.fil $rpart"
        echo $cmd
        $cmd
	if [[ -d "$origname" ]]; then
                echo "Directory exist, moving results to $origname"
                cmd="mv ${origname}_* $origname"
                echo $cmd
                $cmd
        fi
        cmd="rm downsampled_chan_bits.fil"
        echo $cmd
        $cmd
else
	cmd="SP_search_BL.py $fullinput"
	echo $cmd
	$cmd
	if [[ -d "$origname" ]]; then
		echo "Directory exist, moving results to $origname"
		cmd="mv ${origname}_* $origname"
		echo $cmd
		$cmd
	fi
fi
